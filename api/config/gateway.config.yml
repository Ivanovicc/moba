http:
  port: 8080
admin:
  port: 9876
  host: 192.168.0.18
##################################################################################################
apiEndpoints:
  api:
    host: 192.168.0.18
    paths: "/ip"
  auth:
    paths: ["/auth/", "/auth/*"]
  users:
    methods: "GET,POST,PUT,PATCH,DELETE"
    host: 192.168.0.18
    paths: ["/users", "/users/*"]
  account:
    host: 192.168.0.18
    paths: ["/accounts", "/accounts/*"]
  admin:
    host: 192.168.0.18
    paths: "/admin/*"
  transaction:
    host: 192.168.0.18
    paths: ["/transaction", "/transaction/*"]
  email:
    host: 192.168.0.18
    paths: ["/email", "/email/*"]
  contact:
    host: 192.168.0.18
    paths: ["/contacts", "/contacts/*"]
  statistics:
    host: 192.168.0.18
    paths: ["/statistics", "/statistics/*"]
  whatsapp:
    host: 192.168.0.18
    paths: ["/whatsapp", "/whatsapp/*"]

##################################################################################################
serviceEndpoints:
  usersService:
    url: "http://192.168.0.18:8000"
  transactionService:
    url: "http://192.168.0.18:8001"
  authService:
    url: "http://192.168.0.18:8002"
  accountService:
    url: "http://192.168.0.18:8004"
  adminService:
    url: "http://192.168.0.18:8003"
  emailService:
    url: "http://192.168.0.18:8005"
  contactService:
    url: "http://192.168.0.18:8006"
  statisticsService:
    url: "http://192.168.0.18:8008"
  whatsappService:
    url: "http://192.168.0.18:8007"
##################################################################################################
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - oauth2
  - proxy
  - rate-limit
  - log
  - jwt
  - request-transformer
pipelines:
  ##################################################################################################
  usersPipeline:
    apiEndpoints:
      - users
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization}"
      # - jwt:
      #   - action:
      #       secretOrPublicKey: 'mobaAuth'
      #       checkCredentialExistence: false
      - proxy:
          - action:
              serviceEndpoint: usersService
              changeOrigin: true

  ##################################################################################################
  authPipeline:
    apiEndpoints:
      - auth
    policies:
      - proxy:
          - action:
              serviceEndpoint: authService
              changeOrigin: true
  ##################################################################################################
  accountPipeline:
    apiEndpoints:
      - account
    policies:
      - log:
          - action:
              message: "header===> ${req.headers.authorization}"
      # - jwt:
      #   - action:
      #       secretOrPublicKey: 'mobaAuth'
      #       checkCredentialExistence: false
      - proxy:
          - action:
              serviceEndpoint: accountService
              changeOrigin: true

  ##################################################################################################
  adminPipeline:
    apiEndpoints:
      - admin
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - proxy:
          - action:
              serviceEndpoint: adminService
              changeOrigin: true
  ##################################################################################################
  transactionPipeline:
    apiEndpoints:
      - transaction
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - proxy:
          - action:
              serviceEndpoint: transactionService
              changeOrigin: true
##################################################################################################
  emailPipeline:
    apiEndpoints:
      - email
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - proxy:
          - action:
              serviceEndpoint: emailService
              stripPath: true
              changeOrigin: true
##################################################################################################
  contactPipeline:
    apiEndpoints:
      - contact
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - proxy:
          - action:
              serviceEndpoint: contactService
              stripPath: true
              changeOrigin: true
##################################################################################################
  whatsappPipeline:
    apiEndpoints:
      - whatsapp
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - proxy:
          - action:
              serviceEndpoint: whatsappService
              stripPath: true
              changeOrigin: true
##################################################################################################
  statisticsPipeline:
    apiEndpoints:
      - statistics
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - proxy:
          - action:
              serviceEndpoint: statisticsService
              changeOrigin: true